language: ruby
rvm: 2.7.0
services:
- postgresql
before_script:
- psql -c 'create database test_holdings;' -U postgres
before_install:
- gem install bundler
- pip install awscli
cache: bundler
script:
- bundle exec rspec -fd
before_deploy:
- rm -rf vendor
- bundle install --without travis_test
deploy:
- provider: lambda
  function_name: HoldingService-qa
  description: A service for recording parsed holdings records processed by the holdings
    pipeline
  region: us-east-1
  role: arn:aws:iam::946183545209:role/lambda-full-access
  runtime: ruby2.7
  module_name: app
  handler_name: handle_event
  environment:
  - DATABASE=holdings
  - DB_HOST=holdings-qa.cluster-cvy7z512hcjg.us-east-1.rds.amazonaws.com
  - DB_PASSWORD=AQECAHh7ea2tyZ6phZgT4B9BDKwguhlFtRC6hgt+7HbmeFsrsgAAAHIwcAYJKoZIhvcNAQcGoGMwYQIBADBcBgkqhkiG9w0BBwEwHgYJYIZIAWUDBAEuMBEEDK3yY4Th18HMKDTShgIBEIAvPk1ebdH9CUW4ObYCntibF3ePRcjRrdkejxGe8qiSNiwoGhH1MnyfS/69CG9raG8=
  - DB_USERNAME=holdings_user
  - LOG_LEVEL=info
  - PLATFORM_API_BASE_URL=https://qa-platform.nypl.org/api/v0.1/
  - SCHEMA_STRING=Holding
  - STREAM_NAME=Holding-qa
  skip_cleanup: true
  access_key_id: "$AWS_ACCESS_KEY_ID_QA"
  secret_access_key: "$AWS_SECRET_ACCESS_KEY_QA"
  on:
    branch: qa
after_deploy:
- aws configure set aws_access_key_id $AWS_ACCESS_KEY_ID_QA
- aws configure set aws_secret_access_key $AWS_SECRET_ACCESS_KEY_QA
- source $TRAVIS_BRANCH.env; aws lambda update-function-configuration --function-name HoldingService-$TRAVIS_BRANCH --environment "$VARIABLES" --region us-east-1
env:
  global:
  - secure: Bkjyp1kkIhC/hBNLECKsu1m5Be0wQhXb+UllRt4uyADVe4n3zVBHazqMt+KLL1Zptpj7HFoLIdpLN5QA7y3yFZ6//0R2yGoC+H2pXfW3kawNvKtY1fdzxqsXjiuVDA85l183x4V/JRrpBRSQIFq4WOTwIvw3iaO8eBEXRe87sOO+RikWs3PfZBws0RnacAmD1HG0SgADXQFo5DgdO/uThkVJDTSk4iTR9grJXpwIhAbRK5YQ/lO4ousSiUXp1LN5IijoMSuhDrGGr+4TQ34wXAAATUtIY6ZaOTPhgxqZl/Vyydj+Q0P+qZ7e/A6o19UG+TVg45YmrJUKCqI9uyQn/bRR25kjPj4t9BbNkPmHE4F4S4A51EMssHUR8PnUymjpPi0mTTO2qllUEOgUC+Fk3NlUVsCDdWs85nKLnbK+IO3i1fci4GY+HbRxqF8gEx+0gtRxOY1/bZfKRbR01ULV+8amiBm7MIZsSRGM+OAMA1NycRM6HJCVNqFuuiijIrCfJX689WzOE03Nr86JowsyGFY/z5JdHbJfvczjT0egO3Kkjtme4bgC46eQz+Vj8PF89aLeSXVPvglwFgnhbbq6ghytPiA/o23KJ3hqgekgy1AykfrCVxpxWyDERs6YkPxVz8G+Ya1pVRuRzon4eTyBOI7djOIAubXg9ufCTa1J+kg=
  - secure: EL7Yuphy7TUjNLOyI2MbXz+TIECJOpNP+x1enjA3yqMQffUVq6f0LYJaMT+Xrt8hf/jehX0kpBpzInm3HSNL3ddOyC9PA8MOR/fCcYxwzYp1cvxFyxjOJj/2Er4g5smez4ob8Mv56CJ8CZXW2+oOO9jxbBED0mMn/d+SEdAIpdZDf7m3d+9V8PwTimGeRzPAZGqZy7bYHOkslHxd0HIxrtInJonV0mpsi1sbLnSSe/AppoFhMHWW4PWEsxtlu/XaiXzrUyzHGALWC4H2aL54kDM4lMLcFtfAETEBMkL3+yxbkfTod3QdWwWuUohCt9QqKEuQV62DjF832HhdubLeMXTCVx7xvEpytu/vrieSRNSjuNvlBJBY1Gw1Y+NdQgQ7YGsfOOyZVKyG4KjunlQyT3CEqnWFf+c3cQQ3vPiCfuopeLAOTfMwoX7G0xIWxEAqlh64Xi/vhZBaaRQ9JkQsqycKWiw+5x/lc1PTCcQL/duRaKgOmwY/769OS0XBGVnAJptOiExnhUmhf6HzWFuBbYg1ku3nSF9QKkY2hh/EjlSLExPL5wnhc5uHKO7oDi9Z+55ByGxd60IwEXgkLPijy+pQlZazdBK2xWXdV49P7Ejj9dv3DEZzJvCLqXxD4yA2BGuItpsoWjL+CxFaoyVyu7krmAdUiP1sgsVMFhIqr50=
  - secure: o0SqFPRH0kn/wZIfXO1KuH8gUCSSylQWwkyyXiheBl2Sjs2op1Ea/A0TNKMl/yiO+pJqILwy25zd38hMM4BEFyuP+4yoeDxLR4fmzkYzB6qpKXbQksn3cBi6buHE8DnhquXefSzqjSWVjoklr80WKF8PfQYDb1TkX3RTZpRYH5j4ZphSk7pVHZw2oKT3k/g2+UodOfNLZJ5MrUoH/Y0sLMfLaP0wfh+MA6GZfNndwy2jX2pM2mwjaxadCzE9LvQBMWdQjRNAdoWRhz927CQZaG5/59G78geTs+Tt+j9UjgUdepxl2YIU1xRLsmLRy94xmMc908E6DPo1EdD3D07ap32ND9GO+mkMW2zHIc3Qw7qA966cf3CM1MBBoxlXoFn3Am2PRGuBUQGuew08OGefJOqj/VzYM51mP4RIKgK8Pe8k6B3l5asDxg8E6weSOQNYZTSuVgz0LcesV7fFa2HdwlArv/xBCJRjo4+QaUl3BN0ijhF22W3ARavtsg6i79QXqzw6AUU5SFjlmDERDqmzo4tqj7AyBaelIvZ68hMIhj3dlX387BK27Zt0dCqosNDzcNoPJOt5VG9+A+E7V/zZbcMv1Hj7oUclj4j8+l/TBux9drxhvjJ5Xesf98QtahUQnQ3iEF0e9chxM2wSKsl0/W1W7rRhjxFPX6C3aFun/zs=
